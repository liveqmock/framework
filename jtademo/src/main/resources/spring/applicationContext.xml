<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx
    	http://www.springframework.org/schema/tx/spring-tx.xsd
    	http://www.springframework.org/schema/aop
    	http://www.springframework.org/schema/aop/spring-aop.xsd">
	<!-- 
	<bean id="dataSource1" class="com.atomikos.jdbc.AtomikosDataSourceBean"  
        init-method="init" destroy-method="close">  
        <property name="uniqueResourceName">  
            <value>mysql/dataSource1</value>
        </property>  
        <property name="xaDataSourceClassName">  
            <value>${jdbc.driver}</value>  
        </property>  
        <property name="xaProperties">  
            <props>  
                <prop key="URL">${jdbc.urla}</prop>  
                <prop key="user">${jdbc.usernamea}</prop>  
                <prop key="password">${jdbc.passworda}</prop>  
            </props>  
        </property>  
        <property name="poolSize">  
            <value>2</value>  
        </property>  
        <property name="maxPoolSize">  
            <value>30</value>
        </property>  
    </bean>
    
    <bean id="mysqlSessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">  
	    <property name="dataSource" ref="dataSource1"></property>  
	    <property name="packagesToScan" value="com/rainy/jta"/>  
	    <property name="hibernateProperties">  
	        <props>  
	            <prop key="hibernate.show_sql">true</prop>  
	            <prop key="hibernate.format_sql">true</prop>  
	            <prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>  
	        </props>  
	    </property>  
	</bean>
    -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:spring/jdbc.properties</value>
            </list>
        </property>
    </bean>
	<context:annotation-config />
	
	<!-- 
	<bean id="mysqlJtaA" class="org.enhydra.jdbc.pool.StandardXAPoolDataSource" destroy-method="shutdown">  
		<property name="dataSource">
			<bean class="org.enhydra.jdbc.standard.StandardXADataSource" destroy-method="shutdown">
				<property name="driverClassName" value="${jdbc.driver}"></property>  
		        <property name="url" value="${jdbc.urla}"></property>  
		        <property name="username" value="${jdbc.usernamea}"></property>  
		        <property name="password" value="${jdbc.passworda}"></property>
			</bean>
		</property>
		<property name="user" value="${jdbc.usernamea}"/>
		<property name="password" value="${jdbc.passworda}"/>
	</bean>
	
	<bean id="mysqlJtaB" class="org.enhydra.jdbc.pool.StandardXAPoolDataSource" destroy-method="shutdown">  
		<property name="dataSource">
			<bean class="org.apache.commons.dbcp.BasicDataSource">
				<property name="driverClassName" value="${jdbc.driver}"></property>  
		        <property name="url" value="${jdbc.urlb}"></property>  
		        <property name="username" value="${jdbc.usernameb}"></property>  
		        <property name="password" value="${jdbc.passwordb}"></property>
			</bean>
		</property>
		<property name="user" value="${jdbc.usernameb}"/>
		<property name="password" value="${jdbc.passwordb}"/>
	</bean>
	 -->
	
	<!-- mysql 数据源配置 -->  
	<bean id="jtaSourceA" class="com.atomikos.jdbc.AtomikosDataSourceBean"  
	    init-method="init" destroy-method="close">  
	    <property name="uniqueResourceName" value="mysql/jtaSourceA" />
	    <property name="xaDataSourceClassName" value="${jdbc.driver}" />  
	    <property name="xaProperties">  
	        <props>
	            <prop key="user">${jdbc.usernamea}</prop>  
	            <prop key="password">${jdbc.passworda}</prop>  
	            <prop key="URL">${jdbc.urla}</prop>  
	        </props>  
	    </property>  
	    <property name="poolSize" value="2" />  
	    <property name="minPoolSize" value="1" />  
	    <property name="maxPoolSize" value="5" />  
	    <property name="testQuery" value="select 1 from dual" />  
	</bean>
    
    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close"> 
             <property name="forceShutdown" value="true"/>
     </bean> 

     <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp"> 
             <property name="transactionTimeout" value="300"/>
     </bean> 
     <!-- JTA事务管理器 --> 
     <bean id="springTransactionManager" class="org.springframework.transaction.jta.JtaTransactionManager"> 
		<property name="transactionManager" ref="atomikosTransactionManager"/> 
		<property name="userTransaction" ref="atomikosUserTransaction"/> 
     </bean>

    <!-- 事务切面配置 --> 
	<aop:config> 
	 <aop:pointcut id="serviceOperation" expression="execution(* *..service.impl..*(..))"/> 
	 <aop:advisor pointcut-ref="serviceOperation" advice-ref="txAdvice"/> 
	</aop:config> 
	<!-- 通知配置 --> 
	<tx:advice id="txAdvice" transaction-manager="springTransactionManager"> 
		<tx:attributes> 
			<tx:method name="delete*" rollback-for="Exception"/> 
			<tx:method name="save*" rollback-for="Exception"/> 
			<tx:method name="update*" rollback-for="Exception"/> 
			<tx:method name="*" read-only="true" rollback-for="Exception"/> 
		</tx:attributes>
	</tx:advice>
    
    <!-- 配置数据源对象 -->
    <bean id="jdbcBaseDao" class="com.rainy.jta.dao.impl.JdbcDaoImpl" scope="prototype">
        <property name="dataSource" ref="jtaSourceA"></property>
    </bean>
    <bean id="hibernateBaseDao" class="com.rainy.jta.dao.impl.HibernateDaoImpl" scope="prototype">
        <property name="dataSource" ref="jtaSourceA"></property>
    </bean>
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    	<property name="dataSource" ref="jtaSourceA"></property>
    </bean>
    
</beans>